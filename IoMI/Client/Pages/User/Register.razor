@page "/user/register"
@inject HttpClient Http
@inject ModalManager Modal
@inject NavigationManager NavManager
@layout PublicLayout

<div class="row justify-content-center m-0 p-2">
    <div class="col-md-8 col-lg-6 col-xl-5 col-xxl-4 card p-0 mt-5">
        <div class="card-header">
            <h3 class="text-center my-2">Sign Up</h3>
        </div>
        <div class="card-body p-4">
            <EditForm Model="@User" OnValidSubmit="@UserValidated">
                <DataAnnotationsValidator />
                <div class="mb-3">
                    <label for="username">Username: </label>
                    <InputText class="form-control" id="username" @bind-Value="@User.Username" />
                    <ValidationMessage For="() => User.Username" />
                </div>
                <div class="mb-3">
                    <label for="name">Name: </label>
                    <InputText class="form-control" id="name" @bind-Value="@User.Name" />
                    <ValidationMessage For="() => User.Name" />
                </div>
                <div class="mb-3">
                    <label for="surname">Surname: </label>
                    <InputText class="form-control" id="surname" @bind-Value="@User.Surname" />
                    <ValidationMessage For="() => User.Surname" />
                </div>
                <div class="mb-3">
                    <label for="email">Email Address</label>
                    <InputText class="form-control" id="email" @bind-Value="@User.Email" />
                    <ValidationMessage For="() => User.Email" />
                </div>
                <div class="mb-3">
                    <label for="password">Password: </label>
                    <InputText class="form-control" type="password" id="password" @bind-Value="@User.Password" />
                    <ValidationMessage For="() => User.Password" />
                </div>
                <div class="mb-3">
                    <label for="confirmPassword">Confirm Password:</label>
                    <InputText class="form-control" type="password" id="confirmPassword" @bind-Value="@User.ConfirmPassword" />
                    <ValidationMessage For="() => User.ConfirmPassword" />
                </div>
                <div class="d-flex justify-content-center">
                    <ButtonComponent Caption="Register" Color="primary" IsBusy="@BtnIsBusy" Icon="send-outline"></ButtonComponent>
                </div>
            </EditForm>
        </div>
    </div>
</div>


@code {
    private UserModel User = new() { Id = Guid.NewGuid() };
    private bool BtnIsBusy = false;

    private async Task UserValidated()
    {
        BtnIsBusy = true;
        ServerResponse<bool> response = await Http.PostAndGetServerResponseAsync<bool, UserModel>("/user/register", User);
        await Modal.ShowMessageModalAsync("Task completed.", response.Success ? $"We sent an email to {User.Email}." : response.ErrorMessage ?? "Unknown error.");
        User = new() { Id = Guid.NewGuid() };
        BtnIsBusy = false;
        if (response.Success) NavManager.NavigateTo("/user/login");
    }
}
