@page "/user/sendconfirmemail"
@layout PublicLayout
@inject HttpClient Http
@inject ModalManager Modal

<PageTitle>IOMI - Send Confirm Email</PageTitle>

<div class="row justify-content-center m-0 p-2">
    <div class="col-md-8 col-lg-6 col-xl-5 col-xxl-4 card p-0 mt-5">
        <div class="card-header">
            <h3 class="text-center my-2"> Send Confirmation Email </h3>
        </div>
        <div class="card-body p-4">
            <EditForm Model="@Request" OnValidSubmit="@UserValidated">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="email">Email Address: </label>
                    <InputText class="form-control" id="email" @bind-Value="Request.Email" />
                </div>
                <div class="d-flex justify-content-center">
                    <ButtonComponent Caption="Send" Color="primary" IsBusy="@IsBusy" IsBusyCaption="Working on it..." Icon="refresh-sharp"></ButtonComponent>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private EmailModel Request = new();
    private bool IsBusy = false;

    private async Task UserValidated()
    {
        IsBusy = true;
        ServerResponse<bool> response = await Http.PostAndGetServerResponseAsync<bool, EmailModel>("user/sendconfirmemail", Request);
        await Modal.ShowMessageModalAsync("Task completed!", response.Success ? $"We sent an email to {Request.Email}." : response.ErrorMessage ?? "Unknown error.");
        Request = new();
        IsBusy = false;
    }
}