@page "/user/profile"
@layout MainLayout
@inject HttpClient Http
@inject ModalManager Modal

<PageTitle> IoMI - Profile </PageTitle>

<div class="row justify-content-center">
    <EditForm class="col col-lg-7 col-xl-6 col-xxl-4" Model="@User" OnValidSubmit="@UserValidated">
        <DataAnnotationsValidator />
        <div class="row mb-3">
            <h3 class="text-center">Update Profile</h3>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label class="form-control border-0 px-0" for="name">Name: </label>
            </div>
            <div class="col-md-8">
                <InputText class="form-control" id="name" @bind-Value="@User.Name" />
                <ValidationMessage For="() => User.Name" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label class="form-control border-0 px-0" for="surname">Surname: </label>
            </div>
            <div class="col-md-8">
                <InputText class="form-control" id="surname" @bind-Value="@User.Surname" />
                <ValidationMessage For="() => User.Surname" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label class="form-control border-0 px-0" for="company">Company Name: </label>
            </div>
            <div class="col-md-8">
                <InputText class="form-control" id="company" @bind-Value="@User.CompanyName" />
                <ValidationMessage For="() => User.CompanyName" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <label class="form-control border-0 px-0" for="address">Address: </label>
            </div>
            <div class="col-md-8">
                <InputText class="form-control" id="address" @bind-Value="@User.Address" />
                <ValidationMessage For="() => User.Address" />
            </div>
        </div>
        <div class="d-flex justify-content-center">
            <ButtonComponent Caption="Update" Color="primary" IsBusy="@BtnIsBusy" Icon="send-outline"></ButtonComponent>
        </div>
    </EditForm>
</div>

@code {
    private UpdateUserProfileModel User = new();
    private bool BtnIsBusy { get; set; } = true;

    protected override async Task OnInitializedAsync()
    {
        await GetUserInfo();
        BtnIsBusy = false;
    }

    private async Task UserValidated()
    {
        BtnIsBusy = true;
        if(User is not null)
        {
            ServerResponse<bool> response = await Http.PostAndGetServerResponseAsync<bool, UpdateUserProfileModel>("User/UpdateProfile", User);
            await Modal.ShowMessageModalAsync("Done!", response.Success ? "Your profile updated." : response.ErrorMessage ?? "Unknown error.");
            await GetUserInfo();
        }
        BtnIsBusy = false;
    }

    private async Task GetUserInfo()
    {
        ServerResponse<UpdateUserProfileModel>? response = await Http.GetFromJsonAsync<ServerResponse<UpdateUserProfileModel>>("User/GetUserInfo");
        if (response is not null && response.Success)
            User = response.Value ?? new();
    }
}
